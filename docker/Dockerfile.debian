FROM debian:buster as requirements

ENV LC_ALL=C.UTF-8
ENV LANG=C.UTF-8

# Apt-get requirements
RUN apt-get update && apt-get install -y \
    # Python
        python3 python3.7 python3-pip \
    # Python build requirements
        python3-dev python3.7-dev build-essential libffi-dev \
    # Build requirements for HFST + Omorfi
        git autoconf automake libtool file zip \
    # Build requirements for HFST
        flex bison libglib2.0-0 libglib2.0-dev swig \
    # Build requirements for FinnPOS
        clang wget \
 && rm -rf /var/lib/apt/lists/*

# Pipenv
RUN pip3 install pipenv

# Fixup Python
RUN ln -sf /usr/bin/python3.7 /usr/bin/python

# Install HFST
COPY docker/install-hfst.sh /install-hfst.sh
RUN ./install-hfst.sh python
RUN ldconfig

# Build requirements for Omorfi
#RUN pip3 install hfst

# Install Omorfi
COPY docker/install-omorfi.sh /install-omorfi.sh
RUN ./install-omorfi.sh
COPY docker/local-packages.pth /usr/lib/python3.7/site-packages

# Install FinnPOS
COPY docker/finnpos-makefile.patch /finnpos-makefile.patch
COPY docker/install-finnpos.sh /install-finnpos.sh
RUN ./install-finnpos.sh

# Install pipenv
RUN pip3 install --upgrade pip
RUN pip3 install pipenv

# Fixup pythonpath
RUN echo "/usr/local/lib/python3.7/site-packages/" > "/usr/local/lib/python3.7/dist-packages/site.pth"

FROM requirements as full

COPY . /finntk
RUN cd /finntk && pip3 install --no-cache-dir -e .\[dev\]
RUN cd /finntk && python /finntk/finntk/scripts/bootstrap_all.py

# Install WordNet
RUN python3 -c "from nltk import download as d; d('wordnet'); d('omw'); d('punkt')"

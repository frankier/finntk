image: docker:latest

stages:
  - build
  - test

variables:
  DOCKER_DRIVER: overlay2
  REQUIREMENTS_IMAGE: $CI_REGISTRY_IMAGE/requirements
  FULL_IMAGE: $CI_REGISTRY_IMAGE/full
  REQUIREMENTS_DEB_IMAGE: $CI_REGISTRY_IMAGE/requirements-deb
  FULL_DEB_IMAGE: $CI_REGISTRY_IMAGE/full-deb

services:
- docker:dind

before_script:
  - docker info || true
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY || true

build:
  stage: build
  script:
    - docker pull $FULL_IMAGE:latest || true
    - docker build --cache-from $FULL_IMAGE:latest -t full -f docker/Dockerfile .
    - docker tag full $FULL_IMAGE
    - docker push $FULL_IMAGE
    - docker build --cache-from $FULL_IMAGE:latest --target requirements -t requirements -f docker/Dockerfile .
    - docker tag requirements $REQUIREMENTS_IMAGE
    - docker push $REQUIREMENTS_IMAGE

build:deb:
  stage: build
  script:
    - docker pull $FULL_DEB_IMAGE:latest || true
    - docker build --cache-from $FULL_DEB_IMAGE:latest -t full -f docker/Dockerfile.debian .
    - docker tag full $FULL_DEB_IMAGE
    - docker push $FULL_DEB_IMAGE
    - docker build --cache-from $FULL_DEB_IMAGE:latest --target requirements -t requirements-deb -f docker/Dockerfile.debian .
    - docker tag requirements-deb $REQUIREMENTS_DEB_IMAGE
    - docker push $REQUIREMENTS_DEB_IMAGE

test:pytest:
  stage: test
  image: $FULL_IMAGE
  script:
    - cd /finntk
    - pytest tests.py

test:flake8:
  stage: test
  image: $FULL_IMAGE
  script:
    - cd /finntk
    - flake8
